apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "tritoninferenceserver.fullname" . }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    app: {{ template "tritoninferenceserver.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "tritoninferenceserver.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "tritoninferenceserver.name" . }}
        release: {{ .Release.Name }}
        {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      securityContext:
        # fsGroup: 1000
        runAsUser: 0
      initContainers:
{{ toYaml .Values.initContainers | indent 8 }}
      containers:
        - name: tritoninferenceserver
          image: {{ .Values.image.imageName }}
          volumeMounts:
          {{- toYaml .Values.volumeMounts | nindent 10 }}
          env:
            - name: MODEL_SNAPSHOTS_DIRECTORY
              value: "{{ .Values.image.modelSnapshots }}"
            - name: TF_FORCE_GPU_ALLOW_GROWTH
              value: "true"
{{ toYaml .Values.image.env | indent 12 }}
          imagePullPolicy: IfNotPresent
          readinessProbe:
{{- toYaml .Values.readinessProbe | nindent 12 }}
            httpGet:
              path: /v2/health/ready
              port: 8000
          livenessProbe:
{{- toYaml .Values.livenessProbe | nindent 12 }}
            httpGet:
              path: /v2/health/live
              port: 8000
          resources:
{{ toYaml .Values.resources | indent 12 }}
          command: ["/bin/sh"]
          args:
            - -c
            - >-
              chmod 1777 /tmp && apt-get update && apt-get install -y libstdc++6 libgl1-mesa-glx && tritonserver --model-store={{ .Values.image.modelStore }} --log-verbose=1 --model-control-mode=poll --strict-readiness=false --repository-poll-secs=60 --exit-on-error=false --strict-model-config=false --model-repository={{ .Values.image.modelRepository}}
          ports:
            - containerPort: 8000
              name: http
            - containerPort: 8001
              name: grpc
            - containerPort: 8002
              name: metrics
      volumes:
{{- toYaml .Values.volumes | nindent 8 }}