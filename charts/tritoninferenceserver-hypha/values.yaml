replicaCount: 1
image:
  imageName: nvcr.io/nvidia/tritonserver:23.08-py3
  pullPolicy: IfNotPresent
  # modelRepositoryPath: s3://imjoy-s3.pasteur.fr:80/model-repository
  modelRepositoryPath: /model-repository
  modelSnapshotsPath: /model-snapshots
  numGpus: 0
  s3Endpoint: https://uk1s3.embassy.ebi.ac.uk
  s3Bucket: s3://model-repository/
  env:
    - name: TF_FORCE_GPU_ALLOW_GROWTH
      value: "true"
ingress:
  enabled: false
  className: nginx
  path: /
  # Used to create an Ingress record.
  hosts:
    - chart-example.local
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
#     # # cert-manager.io/cluster-issuer: letsencrypt-production
#     nginx.ingress.kubernetes.io/enable-cors: "true"
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/configuration-snippet: |
#         more_set_headers "Access-Control-Allow-Headers: Inference-Header-Content-Length,Accept-Encoding,Content-Encoding,Access-Control-Allow-Headers";
#     nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
#     nginx.ingress.kubernetes.io/cors-allow-methods: "GET,HEAD,OPTIONS,PUT,POST"
#     nginx.ingress.kubernetes.io/cors-allow-origin: "*"
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   labels: {}
#   tls:
#     # Secrets must be manually created in the namespace.
#     # - secretName: chart-example-tls
#     #   hosts:
#     #     - chart-example.local
# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #  cpu: 100m
#   #  memory: 128Mi
#   # requests:
#   #  cpu: 100m
#   #  memory: 128Mi
service:
  name: tritoninferenceserver
  type: ClusterIP
  # sessionAffinity: None
  # sessionAffinityConfig: {}
  # clusterIP:
  port: 8000
  # nodePort:
  # loadBalancerIP:
  # loadBalancerSourceRanges:
  annotations: {}
  # foo.io/bar: "true"

  resources:
    requests:
      nvidia.com/gpu: 0
      memory: "2Gi"
      cpu: "1"
    limits:
      nvidia.com/gpu: 0
      memory: "3Gi"
      cpu: "1"
# # apiVersion: networking.k8s.io/v1
# # kind: Ingress
# # metadata:
# #   name: tritoninferenceserver
# #   annotations:
# #     traefik.frontend.priority: "2"
# #     traefik.http.routers.triton.rule: "Host(`triton.imjoy.io`)"
# #     traefik.http.routers.triton.entrypoints: "websecure"
# #     # # traefik.http.routers.triton.tls.certresolver: "leresolver"
# #     # traefik.http.routers.triton.middlewares: "triton-header"
# #     # # traefik.http.services.triton-server.loadbalancer.server.port: "8000"
# #     # traefik.http.middlewares.triton-header.headers.accesscontrolallowheaders: "Access-Control-Allow-Headers,Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Range"
# #     # traefik.http.middlewares.triton-header.headers.accesscontrolallowmethods: "GET,HEAD,OPTIONS,PUT,POST"
# #     # traefik.http.middlewares.triton-header.headers.accesscontrolalloworiginlist: "https://imjoy.io,https://lib.imjoy.io,https://kaibu.org,https://ij.imjoy.io"
# #     # traefik.http.middlewares.triton-header.headers.accesscontrolmaxage: "100"
# #     # traefik.http.middlewares.triton-header.headers.addvaryheader: "true"
# #     # nginx.ingress.kubernetes.io/rewrite-target: /
# # spec:
# #   rules:
# #   - host: imjoy.duckdns.org
# #     http:
# #       paths:
# #       - path: /triton
# #         backend:
# #           service:
# #             name: tritoninferenceserver
# #             port:
# #               number: 80
# {{- if .Values.ingress.enabled -}}

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: {{ template "tritoninferenceserver.fullname" . }}
#   namespace: {{ .Values.namespace | default .Release.Namespace }}
#   annotations:
#     # nginx.ingress.kubernetes.io/configuration-snippet: |
#       # more_set_headers "Access-Control-Allow-Headers: Inference-Header-Content-Length,Accept-Encoding,Content-Encoding,Access-Control-Allow-Headers"
#     # nginx.ingress.kubernetes.io/enable-cors: "true"
#     # # nginx.ingress.kubernetes.io/configuration-snippet: |
# spec:
#   rules:
#   # - host: "imjoy.duckdns.org"
#   #   http:
#   #     paths:
#   #     - pathType: Prefix
#   #       path: /triton(/|$)(.*)
#   #       backend:
#   #         service:
#   #           name: tritoninferenceserver
#   #           port:
#   #             number: 8000
#   - host: "imjoy.duckdns.org"
#     http:
#       paths:
#       - pathType: Prefix
#         path: /triton(/|$)(.*)
#         backend:
#           service:
#             name: {{ .Values.service.name }}
#             port:
#               number: {{ .Values.service.port }}
#   # tls:
#   #   - hosts:
#   #     - "imjoy.duckdns.org"
#   #     secretName: tls-secret
#   {{- end -}}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  gpuUtilization: 50
#   gpuMemoryUtilization: 50
