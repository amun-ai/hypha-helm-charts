# Default values for imjoy-app-engine.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
acmeEmail: ""
certSecretName: hypha-tls
hyphaHostName: https://hypha.local
s3ConsoleHostName: https://hs3c.local
s3_endpoint_url_public: https://hs3.local
# s3_endpoint_url: ""
auth0_audience: ""
auth0_domain: ""
jwt_secret: "xZ/aDcP+PfoTWgwA9ZADTtU/+djwMeMKz4QlSKRcgEs="
nodeSelector: {}
# TODO
# Currently disabled in template because no obvious
# way to pass in the scripts to deployment
startupFunctionsPath: /home/hypha_services/hypha-startup.py
appsDir: /home/hypha-apps
executablePath: /home/bin

image:
  repository: ghcr.io/amun-ai/hypha
  pullPolicy: IfNotPresent
  tag: "0.15.35"

triton_url: "http://tritoninferenceserver.tritoninferenceserver.svc.cluster.local:8000"

service:
  type: ClusterIP
  port: 80
  annotations: {}

ingress:
  enabled: false
  className: nginx
  path: /
  # Used to create an Ingress record.
  hosts:
    - ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  labels: {}
  # tls:
  # Secrets must be manually created in the namespace.
  # - secretName: chart-example-tls
  #   hosts:
  #     - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

redis:
  fullnameOverride: "redis"
  enabled: true
  global:
    redis:
      password: "admin"

docker-registry:
  enabled: false

minio:
  # nameOverride: "minio"
  fullnameOverride: "minio"
  enabled: true
  rootUser: "minio"
  rootPassword: "xZ/aDcP+PfoTWgwA9ZADTtU/+djwMeMKz4QlSKRcgEs="
  publicEndpointUrl: ""
  browserRedirectUrl: ""

  replicas: 4
  ingress:
    enabled: true
    # hosts:
    # - hs3.imjoy.io
  resources:
    requests:
      memory: 2Gi
  persistence:
    size: 10Gi

tritoninferenceserver-hypha:
  replicaCount: 1
  image:
    imageName: nvcr.io/nvidia/tritonserver:23.08-py3
    pullPolicy: IfNotPresent
    # modelRepositoryPath: s3://imjoy-s3.pasteur.fr:80/model-repository
    modelSnapshots: /model-snapshots
    modelRepository: /model-repository
    modelStore: /model-repository
    numGpus: 0
    s3Endpoint: ""
    s3Bucket: ""
    env:
      - name: TF_FORCE_GPU_ALLOW_GROWTH
        value: "true"
  ingress:
    enabled: false
    className: nginx
    path: /
    # Used to create an Ingress record.
    hosts:
      - chart-example.local
    name: tritoninferenceserver
    type: ClusterIP
    port: 8000
    annotations: {}

  resources:
    requests:
      nvidia.com/gpu: 0
      memory: "2Gi"
      cpu: "1"
    limits:
      nvidia.com/gpu: 0
      memory: "3Gi"
      cpu: "1"

  service:
    port: 8000

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    gpuUtilization: 50
  #   gpuMemoryUtilization: 50

  nodeSelector: {}
  podLabels: {}

  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3

  livenessProbe:
    initialDelaySeconds: 1800
    periodSeconds: 5
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3

  volumes:
    - emptyDir:
        medium: Memory
      name: dshm
    - ephemeral:
        volumeClaimTemplate:
          metadata:
            creationTimestamp: null
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            # storageClassName: standard
            volumeMode: Filesystem
      name: triton-cache

  volumeMounts:
    - mountPath: /dev/shm
      name: dshm
    - mountPath: /opt/tritonserver/caches
      name: triton-cache
      subPath: caches
    - mountPath: /model-repository
      name: triton-cache
      subPath: model-repository
    - mountPath: /model-snapshots
      name: triton-cache
      subPath: model-snapshots
    - mountPath: /tmp
      name: triton-cache
