{{- $S3_ENDPOINT_URL := .Values.s3_endpoint_url -}}
{{- $S3_ENDPOINT_URL_PUBLIC := .Values.s3_endpoint_url_public -}}
{{- $S3_ACCESS_KEY := .Values.s3_access_key -}}
{{- $S3_SECRET_KEY := .Values.s3_secret_key -}}
{{- $MINIO_BROWSER_REDIRECT_URL := .Values.minio.browserRedirectUrl -}}
{{- $TRITON_URL := .Values.triton_url}} 
{{- $AUTH0_AUDIENCE := .Values.auth0_audience}} 
{{- $AUTH0_DOMAIN := .Values.auth0_domain}}
{{- $JWT_SECRET := .Values.jwt_secret}} 

{{- if .Values.minio.enabled }}
{{ $S3_ENDPOINT_URL = "http://hypha-minio:9000" }}
{{ $S3_ACCESS_KEY = .Values.minio.rootUser }}
{{ $S3_SECRET_KEY = .Values.minio.rootPassword }}
{{ $MINIO_BROWSER_REDIRECT_URL = .Values.minio.browserRedirectUrl }}
{{- end }}

{{- if (index .Values "tritoninferenceserver" "enabled") }}
{{ $TRITON_URL = "http://tritoninferenceserver:8000" }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hypha.fullname" . }}
  labels:
    {{- include "hypha.labels" . | nindent 4 }}
spec:
  # initContainers:
  #   # - name: wait-60s
  #   #   image: busybox
  #   #   command: ["/bin/sh", "-c"]
  #   #   args: 
  #   #   - |
  #   #     echo "Waiting for 60s"
  #   #     sleep 60
  #   - name: dependencies
  #     image: bitnami/kubectl
  #     command: ["/bin/sh", "-c"]
  #     args: -|
  #       kubectl rollout status --watch --timeout=600s statefulset/redis-master statefulset/minio statefulset/redis-replicas
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hypha.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hypha.selectorLabels" . | nindent 8 }}
    spec:
      nodeSelector:
{{ toYaml .Values.nodeSelector | nindent 8 }}
      securityContext:
{{ toYaml .Values.securityContext | nindent 8 }}
      containers:
      - name:  {{ .Chart.Name }}
        command: ["/bin/sh", "-c"]
        args:
        - |
            python3 -m hypha.server \
            --host=0.0.0.0 \
            --port={{ .Values.service.port }} \
            --redis-uri=redis://:{{ .Values.redis.global.redis.password }}@{{ .Values.redis.fullnameOverride }}-master:6379/0 \
            --triton-servers={{ $TRITON_URL }} \
            --enable-s3 \
            --endpoint-url=http://{{ .Values.minio.fullnameOverride }}:{{.Values.minio.service.ports.api}} \
            --endpoint-url-public={{ $S3_ENDPOINT_URL_PUBLIC }} \
            --access-key-id="{{ .Values.minio.auth.rootUser }}" \
            --secret-access="{{ .Values.minio.auth.rootPassword }}" \
            --executable-path={{ .Values.executablePath }} \
            --enable-server-apps \
            --apps-dir={{ .Values.appsDir }} \
            --public-base-url={{ .Values.hyphaHostName }} \

            
#  TODO add option for non minio s3


        # --access-key-id="{{ $S3_ACCESS_KEY }}" \
        # --secret-access-key="{{ $S3_SECRET_KEY }}" \
        # --reset-redis \
        # --startup-functions={{ .Values.startupFunctionsPath }}:hypha_startup \
        # --in-docker \
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
{{ toYaml .Values.securityContext | nindent 10 }}
        env:
        - name: AUTH0_AUDIENCE
          value:  "{{ $AUTH0_AUDIENCE }}"
        - name: AUTH0_DOMAIN
          value:  "{{ $AUTH0_DOMAIN }}"
        - name: JWT_SECRET
          value:  "{{ $JWT_SECRET }}"
        resources:
          limits:
            cpu: "0.5"
            memory: "2Gi"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: health/liveness
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: health/liveness
            port: http
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: {{ .Values.service.port}}
          name: http
          protocol: TCP

      securityContext:
{{ toYaml .Values.securityContext | nindent 8 }}



  # hypha:
  #   build: hypha
  #   image: ghcr.io/ctr26/hypha
  #   networks:
  #     - imjoy-ai-engine
  #   environment:
  #     AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
  #     auth0_domain: ${auth0_domain}
  #     JWT_SECRET: ${JWT_SECRET}
  #   ports:
  #     - "9520:9520"
  #   command: python -m hypha.server --host=0.0.0.0 --port=9520 --enable-server-apps --enable-s3 --endpoint-url=${S3_ENDPOINT_URL} --access-key-id=${S3_ACCESS_KEY} --secret-access-key=${S3_SECRET_KEY} --apps-dir=/home/hypha-apps --executable-path=/home/bin
  #   volumes:
  #     - "${DATA_ROOT}/hypha-apps:/home/hypha-apps"
  #   working_dir: /home
  #   depends_on:
  #     minio:
  #       condition: service_healthy
  #   labels:
  #     - "traefik.http.routers.hypha.rule=Host(`ai.imjoy.io`)"
  #     - "traefik.http.routers.hypha.entrypoints=websecure"
  #     - "traefik.http.routers.hypha.tls.certresolver=leresolver"
  #     - "traefik.http.services.hypha.loadbalancer.server.port=9520"
  #     # - "traefik.http.routers.api.tls.domains[0].main=imjoy.io"
  #     # - "traefik.http.routers.api.tls.domains[0].sans=*.imjoy.io"
